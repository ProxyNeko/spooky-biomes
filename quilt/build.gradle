plugins {
	alias quilt.plugins.quilt.loom
}

//Messy workaround for a bug in Quilt Loom 1.3.3=> that causes the duplication of Fabric dependencies.
project.configurations.configureEach {
	exclude(group: "net.fabricmc", module: "fabric-loader")
	exclude(group: "net.fabricmc.fabric-api")
}

dependencies {
	minecraft libs.minecraft
	mappings loom.officialMojangMappings()

	modImplementation quilt.quilt.loader
	modImplementation quilt.quilted.fabric.api

	modImplementation(quilt.quilt.standard.libs) {
		exclude group: "net.fabricmc"
	}

	compileOnly project(":common")

	modImplementation quilt.terrablender
	modImplementation quilt.jade
	modImplementation quilt.modmenu
}

loom {
	if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
		accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
	}

	mods {
		"${mod_id}" {
			sourceSet("main")
			project(":common").sourceSets.main
		}
	}

	runs {
		client {
			client()
			setConfigName("Quilt Client")
			ideConfigGenerated(true)
			runDir("run")

			if (rootProject.hasProperty('mc_uuid')) {
				programArgs("--uuid", rootProject.mc_uuid)
			}

			if (rootProject.hasProperty('mc_username')) {
				programArgs("--username", rootProject.mc_username)
			}

			if (rootProject.hasProperty('mc_java_agent_path')) {
				vmArg("-javaagent:${rootProject.mc_java_agent_path}")
			}
		}

		server {
			server()
			setConfigName("Quilt Server")
			ideConfigGenerated(true)
			programArg("--nogui")
			runDir("run/server")
		}
	}
}

sourceSets.main.resources.srcDir('../common/src/generated/resources')

tasks.withType(JavaCompile).configureEach {
	source(project(":common").sourceSets.main.allSource)
}

tasks.withType(Javadoc).configureEach {
	source(project(":common").sourceSets.main.allJava)
}

tasks.named("sourcesJar", Jar) {
	from(project(":common").sourceSets.main.allSource)
}

processResources {
	from project(":common").sourceSets.main.resources
}

//We data generate our resources into the projects root directory so we have to
//add them to the sub-project here to be loaded when the game runs.
sourceSets {
	main {
		resources {
			srcDirs += [
				"${project.rootDir}/common/src/generated"
			]
		}
	}
}
